#!/usr/bin/env node
const fs = require('fs')
const path = require('path')
const bootloader = require('../bootloader')

let configPath = path.join(process.cwd(), 'config')
if (process.argv.length > 2) {
  configPath = process.argv[2]
}

const sbotConfig = JSON.parse(fs.readFileSync(configPath))
const client = require('ssb-client')

const manifest = JSON.parse(fs.readFileSync( (sbotConfig.path || `${process.env.HOME}/.${sbotConfig.appName}`) + '/manifest.json'))

function print() {
  console.error.apply(console, arguments)
}

client(Object.assign({}, sbotConfig, {manifest}), (err, ssb) => {
  if (err) return console.error(err)
  ssb.ws.getAddress( (err, address) => {
    if (err) return console.error(err)
    sbotConfig.wsAddress = address
    bootloader(ssb, print, {manifest, sbotConfig}, (err, url, kv) => {
      if (err) return console.error(err)
      console.log(url)
      process.exit(0)
    })
  })
})

